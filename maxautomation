#!/bin/bash
# Ultimate Batocera Tailscale & SSH Setup (Menu Version)
# Version: 15.3 - Prevents SSH Disconnection & Enhanced Testing
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

LOG_FILE="/userdata/system/setup.log"
INSTALL_DIR="/userdata/system/tailscale"
SSH_DIR="/userdata/system/.ssh"
KEYS_DIR="$INSTALL_DIR/keys"
DROPBEAR_KEY="$SSH_DIR/id_dropbear"
OPENSSH_KEY="$KEYS_DIR/id_ed25519_batocera"
CONFIG_FILE="/userdata/system/tailscale.conf"
WATCHDOG_SCRIPT="/userdata/system/tailscale_watchdog.sh"

log() {
    echo -e "${1}[$(date '+%Y-%m-%d %H:%M:%S')] ${2}${NC} ${MAGENTA}⚡${NC}" | tee -a "$LOG_FILE"
}

banner() {
    local text="$1"
    local width=60
    local border=$(printf "%${width}s" '' | tr ' ' '=')
    echo -e "${BLUE}${border}${NC}" | tee -a "$LOG_FILE"
    printf "${MAGENTA}%${width}s\n${NC}" "$text" | tr ' ' '.' | tee -a "$LOG_FILE"
    echo -e "${BLUE}${border}${NC}" | tee -a "$LOG_FILE"
}

restart_tailscale() {
    log "$YELLOW" "Restarting Tailscale..."
    "$INSTALL_DIR/bin/tailscale" --socket="$INSTALL_DIR/tailscaled.sock" down 2>/dev/null
    sleep 2
    pkill -x tailscaled
    sleep 2
    "$INSTALL_DIR/bin/tailscaled" --state="$INSTALL_DIR/tailscaled.state" --socket="$INSTALL_DIR/tailscaled.sock" --tun=userspace-networking --verbose=1 > /tmp/tailscaled.log 2>&1 &
    sleep 5
    "$INSTALL_DIR/bin/tailscale" --socket="$INSTALL_DIR/tailscaled.sock" up $TAILSCALE_ARGS > /tmp/tailscaled.log 2>&1 || { log "$RED" "Restart failed—see $LOG_FILE"; cat /tmp/tailscaled.log >> "$LOG_FILE"; return 1; }
    log "$GREEN" "✅ Tailscale restarted successfully!"
}

# Ensure script is run as root
[ "$(id -u)" -ne 0 ] && { log "$RED" "ERROR: Run as root."; exit 1; }

clear
banner "Batocera Tailscale & SSH Setup (v15.3)"
echo -e "${CYAN}Setup Tailscale, SSH, Samba with full automation.${NC}"

# Detect active SSH sessions
ACTIVE_SSH_SESSIONS=$(who | grep pts | wc -l)
if [[ "$ACTIVE_SSH_SESSIONS" -gt 0 ]]; then
    log "$YELLOW" "⚠️ Active SSH session detected—Dropbear restart is disabled to prevent disconnection."
fi

# Dropbear Configuration
log "$BLUE" "Configuring Dropbear..."
touch /etc/dropbear/dropbear.conf
[[ ! -w /etc/dropbear/dropbear.conf ]] && { log "$RED" "ERROR: Cannot write Dropbear config."; exit 1; }
sed -i '/^PasswordAuth/d' /etc/dropbear/dropbear.conf 2>/dev/null || true
if [[ "$AUTH_MODE" == "key" ]]; then
    echo "PasswordAuth no" > /etc/dropbear/dropbear.conf
else
    echo "PasswordAuth yes" > /etc/dropbear/dropbear.conf
fi

# Skip Dropbear restart to prevent SSH disconnection
log "$YELLOW" "⚠️ Dropbear restart skipped to prevent SSH disconnection."
log "$CYAN" "If you need to manually restart Dropbear later, use the following command:"
log "$CYAN" "  /usr/sbin/dropbear -s -p 22"

# Tailscale Installation
log "$BLUE" "Installing Tailscale..."
pkill -x tailscaled || true
mkdir -p /var/run/tailscale
ln -sf "$INSTALL_DIR/tailscaled.sock" /var/run/tailscale/tailscaled.sock
"$INSTALL_DIR/bin/tailscaled" --state="$INSTALL_DIR/tailscaled.state" --socket="$INSTALL_DIR/tailscaled.sock" --tun=userspace-networking --verbose=1 > /tmp/tailscaled.log 2>&1 &
sleep 10
TAILSCALE_ARGS="--authkey=$AUTH_KEY --hostname=$HOSTNAME --advertise-tags=$TAG --accept-routes"
"$INSTALL_DIR/bin/tailscale" --socket="$INSTALL_DIR/tailscaled.sock" up $TAILSCALE_ARGS > /tmp/tailscaled.log 2>&1 || { log "$RED" "Tailscale failed—see $LOG_FILE"; cat /tmp/tailscaled.log >> "$LOG_FILE"; exit 1; }
sleep 5

log "$GREEN" "✅ Tailscale & SSH configured!"
log "$CYAN" "Tailscale IP: $TAILSCALE_IP"
log "$CYAN" "SSH Authentication Mode: $AUTH_MODE"
log "$CYAN" "If you need to restart Tailscale, run: restart_tailscale"
