#!/bin/bash
# Ultimate SSH Key & Tailscale Setup for Batocera
# Version: 12.2 - Simple, Safe, Robust
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

log() { echo -e "${1}[$(date '+%Y-%m-%d %H:%M:%S')] ${2}${NC}"; }

generate_random_password() {
    head /dev/urandom | tr -dc 'A-Za-z0-9~!@#$%^&*()-_=+\[\]{};:,<.>/?' | head -c 32
}

TAILSCALE_VERSION="1.80.2"
INSTALL_DIR="/userdata/system/tailscale"
SSH_DIR="/userdata/system/.ssh"
KEYS_DIR="$INSTALL_DIR/keys"
LOCAL_SSH_PORT="22"

clear
echo -e "${YELLOW}Tailscale & SSH Key Setup for Batocera${NC}"
[ "$(id -u)" -ne 0 ] && { log "$RED" "Must be root."; exit 1; }

log "$BLUE" "Ensuring TUN device exists..."
modprobe tun
mkdir -p /dev/net
[ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200 && chmod 600 /dev/net/tun

read -rp "Enter your Tailscale auth key: " AUTH_KEY
[[ -z "$AUTH_KEY" || ! "$AUTH_KEY" =~ ^tskey-auth- ]] && { log "$RED" "ERROR: Invalid auth key."; exit 1; }
read -rp "Enter a hostname (default: batocera-pi): " USER_HOSTNAME
HOSTNAME="${USER_HOSTNAME:-batocera-pi}"
read -rp "Enter your Tailscale tag (e.g., tag:ssh-batocera-1): " TAG
[[ -z "$TAG" ]] && { log "$RED" "ERROR: Tag required."; exit 1; }
log "$GREEN" "✅ Using hostname: $HOSTNAME"
log "$GREEN" "✅ Using Tailscale tag: $TAG"

LOCAL_IP=$(ip -4 addr show | grep -oE "inet [0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | awk '{print $2}' | grep -v "127.0.0.1" | head -n 1)
[[ -z "$LOCAL_IP" ]] && { log "$RED" "ERROR: Could not determine local IP."; exit 1; }
log "$BLUE" "Detected local IP: $LOCAL_IP"

mkdir -p "$SSH_DIR" "$KEYS_DIR" /etc/dropbear
chmod 700 "$SSH_DIR" "$KEYS_DIR" /etc/dropbear

OPENSSH_KEY="$KEYS_DIR/id_ed25519_batocera"
log "$GREEN" "🔑 Generating new OpenSSH key..."
rm -f "$OPENSSH_KEY" "$OPENSSH_KEY.pub"
ssh-keygen -t ed25519 -f "$OPENSSH_KEY" -N "" || { log "$RED" "Key generation failed"; exit 1; }
chmod 600 "$OPENSSH_KEY" "$OPENSSH_KEY.pub"
cat "$OPENSSH_KEY.pub" > /etc/dropbear/authorized_keys
chmod 600 /etc/dropbear/authorized_keys

log "$BLUE" "Saving overlay to persist SSH config..."
batocera-save-overlay || { log "$RED" "Overlay save failed"; exit 1; }

mkdir -p "$INSTALL_DIR/bin"
wget -q -O "$INSTALL_DIR/tailscale.tgz" "https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_arm64.tgz" || { log "$RED" "Tailscale download failed."; exit 1; }
tar -xzf "$INSTALL_DIR/tailscale.tgz" -C "$INSTALL_DIR/bin" --strip-components=1 || { log "$RED" "Tailscale extraction failed."; exit 1; }
rm "$INSTALL_DIR/tailscale.tgz"
chmod +x "$INSTALL_DIR/bin/tailscale" "$INSTALL_DIR/bin/tailscaled"

log "$BLUE" "Starting Tailscale daemon..."
pkill -f "tailscaled" || true
"$INSTALL_DIR/bin/tailscaled" --state="$INSTALL_DIR/tailscaled.state" --socket="$INSTALL_DIR/tailscaled.sock" --tun=userspace-networking > /tmp/tailscaled.log 2>&1 &
sleep 10
"$INSTALL_DIR/bin/tailscale" --socket="$INSTALL_DIR/tailscaled.sock" up --authkey="$AUTH_KEY" --hostname="$HOSTNAME" --advertise-tags="$TAG" --accept-routes > /tmp/tailscaled.log 2>&1 || { log "$RED" "Tailscale up failed"; exit 1; }
sleep 10
ip route del 192.168.50.0/24 dev tailscale0 table 52 2>/dev/null || true

log "$BLUE" "Waiting for Tailscale IP assignment..."
TRIES=0
TAILSCALE_IP=""
while [[ -z "$TAILSCALE_IP" && $TRIES -lt 10 ]]; do
    sleep 3
    TAILSCALE_IP=$("$INSTALL_DIR/bin/tailscale" --socket="$INSTALL_DIR/tailscaled.sock" ip -4 2>/dev/null)
    ((TRIES++))
done
[[ -z "$TAILSCALE_IP" ]] && { log "$YELLOW" "⚠️ Tailscale IP not assigned."; TAILSCALE_IP="$LOCAL_IP"; } || log "$GREEN" "✅ Tailscale IP: $TAILSCALE_IP"

log "$BLUE" "Starting temporary Dropbear on port 2222 with password auth..."
/usr/sbin/dropbear -p 2222 &

log "$GREEN" "✅ Setup Complete (Phase 1)!"
log "$YELLOW" "⚠️ Test SSH key on port 2222 BEFORE proceeding."
log "$CYAN" "1. Copy the SSH key to your PC via Tailscale (new terminal):"
echo -e "${YELLOW}tailscale file cp $OPENSSH_KEY C:\\Users\\Willi\\.ssh\\id_ed25519_batocera:${NC}"
log "$CYAN" "   (Or: scp root@$LOCAL_IP:$OPENSSH_KEY C:\\Users\\Willi\\.ssh\\id_ed25519_batocera  # Password: linux)${NC}"
log "$CYAN" "2. Test SSH (new terminal):"
echo -e "${YELLOW}ssh -i C:\\Users\\Willi\\.ssh\\id_ed25519_batocera root@$LOCAL_IP -p 2222${NC}"
log "$CYAN" "3. If it works, type 'yes'. If not, type 'no'."
read -rp "Did SSH key authentication work? (yes/no): " KEY_WORKS

if [[ "$KEY_WORKS" =~ ^[Yy]es$ ]]; then
    log "$GREEN" "✅ SSH key confirmed!"
    echo "PasswordAuth no" > /etc/dropbear/dropbear.conf
    NEW_PASS=$(generate_random_password)
    echo "root:$NEW_PASS" | chpasswd
    log "$RED" "Password auth disabled, root password reset to: $NEW_PASS (save this!)"
    pkill -f "dropbear.*2222" || true
    log "$BLUE" "Restarting Dropbear on port 22 with key auth..."
    pkill -f "dropbear.*22" || true
    /usr/sbin/dropbear -s -p 22 &
else
    log "$RED" "❌ SSH key failed. Keeping password auth."
    pkill -f "dropbear.*2222" || true
    exit 1
fi

log "$BLUE" "Setting up persistence..."
cat > /userdata/system/custom.sh <<EOF
#!/bin/sh
mkdir -p /dev/net
[ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200 && chmod 600 /dev/net/tun
ip link set wlan0 up
iptables -F INPUT
iptables -P INPUT ACCEPT
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
pkill -f dropbear || true
sleep 1
/usr/sbin/dropbear -s -p 22
sleep 1
if ! pgrep -f "$INSTALL_DIR/bin/tailscaled" > /dev/null; then
    $INSTALL_DIR/bin/tailscaled --state=$INSTALL_DIR/tailscaled.state --socket=$INSTALL_DIR/tailscaled.sock --tun=userspace-networking > /tmp/tailscaled.log 2>&1 &
    sleep 10
    $INSTALL_DIR/bin/tailscale --socket=$INSTALL_DIR/tailscaled.sock up --hostname="$HOSTNAME" --advertise-tags="$TAG" --accept-routes > /tmp/tailscaled.log 2>&1
    ip route del 192.168.50.0/24 dev tailscale0 table 52 2>/dev/null || true
fi
EOF
chmod +x /userdata/system/custom.sh

log "$BLUE" "Saving final overlay..."
batocera-save-overlay || { log "$RED" "Overlay save failed"; exit 1; }
log "$GREEN" "✅ Setup Complete! Reboot now with 'reboot'."
