#!/bin/bash
# Ultimate SSH Key & Tailscale Setup for Batocera
# Version: 12.20 - Fixed Tag Logic, Tailscale Error Logging, SSH Config Tip
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

log() {
    echo -e "${1}[$(date '+%Y-%m-%d %H:%M:%S')] ${2}${NC} ${MAGENTA}‚ö°${NC}"
}

TAILSCALE_VERSION="1.80.2"
INSTALL_DIR="/userdata/system/tailscale"
SSH_DIR="/userdata/system/.ssh"
KEYS_DIR="$INSTALL_DIR/keys"
LOCAL_SSH_PORT="22"

generate_random_password() {
    head /dev/urandom | tr -dc 'A-Za-z0-9~!@#$%^&*()-_=+[]{};:,<.>/?' | head -c 32
}

banner() {
    local text="$1"
    local width=60
    local border=$(printf "%${width}s" '' | tr ' ' '=')
    echo -e "${BLUE}${border}${NC}"
    printf "${MAGENTA}%${width}s\n${NC}" "$text" | tr ' ' '.'
    echo -e "${BLUE}${border}${NC}"
}

progress_indicator() {
    local duration=$1
    local message="$2"
    local spin=('‚†ã' '‚†ô' '‚†π' '‚†∏' '‚†º' '‚†¥' '‚†¶' '‚†ß' '‚†á' '‚†è')
    local i=0
    echo -ne "${CYAN}${message}...${NC} "
    for ((t=0; t<duration*10; t++)); do
        printf "\b${spin[i]}"
        i=$(( (i+1) % 10 ))
        sleep 0.1
    done
    echo -e "\b${GREEN}‚úì${NC}"
}

clear
banner "Batocera Tailscale & SSH Key Setup (v12.20)"
echo -e "${CYAN}This script will guide you through setting up Tailscale and SSH key-based authentication on your Batocera system.${NC}"

[ "$(id -u)" -ne 0 ] && { log "$RED" "ERROR: This script must be run as root. Use 'sudo bash $(basename "$0")'"; exit 1; }

log "$BLUE" "Ensuring TUN device exists..."
progress_indicator 2 "Initializing TUN device"
modprobe tun >/dev/null 2>&1
mkdir -p /dev/net >/dev/null 2>&1
[ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200 && chmod 600 /dev/net/tun >/dev/null 2>&1

echo
log "$YELLOW" "Let's get some information from you..."
read -rp "Enter your Tailscale auth key (get it from https://login.tailscale.com/admin/settings/keys): " AUTH_KEY
[[ -z "$AUTH_KEY" ]] && { log "$RED" "ERROR: Auth key is required."; exit 1; }
[[ ! "$AUTH_KEY" =~ ^tskey-auth- ]] && { log "$RED" "ERROR: Invalid auth key format (must start with 'tskey-auth-')."; exit 1; }
DEFAULT_HOSTNAME=$(hostname | cut -d'.' -f1)
read -rp "Enter a hostname for this device (default: $DEFAULT_HOSTNAME): " USER_HOSTNAME
HOSTNAME="${USER_HOSTNAME:-$DEFAULT_HOSTNAME}"
DEFAULT_TAG="tag:ssh-batocera"
read -rp "Use default Tailscale tag '$DEFAULT_TAG'? (yes/no): " TAG_CONFIRM
if [[ "$TAG_CONFIRM" =~ ^[Yy]es$ ]]; then
    TAG="$DEFAULT_TAG"
else
    read -rp "Enter your custom Tailscale tag: " TAG
    [[ -z "$TAG" ]] && { log "$RED" "ERROR: Tag is required if not using the default."; exit 1; }
fi
log "$GREEN" "‚úÖ Using hostname: $HOSTNAME"
log "$GREEN" "‚úÖ Using Tailscale tag: $TAG"

LOCAL_IP=$(ip -4 addr show | grep -oE "inet [0-9]+\.[0-9]+\.[0-9]+\.[0-9]+" | awk '{print $2}' | grep -v "127.0.0.1" | head -n 1)
[[ -z "$LOCAL_IP" ]] && { log "$RED" "Could not determine local IP. You'll need to enter it manually later."; LOCAL_IP="<LOCAL_IP>"; } || log "$BLUE" "Detected local IP: $LOCAL_IP"

mkdir -p "$SSH_DIR" "$KEYS_DIR" /etc/dropbear
chmod 700 "$SSH_DIR" "$KEYS_DIR" /etc/dropbear

DROPBEAR_KEY="$SSH_DIR/id_dropbear"
OPENSSH_KEY="$KEYS_DIR/id_ed25519_batocera"
if [ ! -f "$DROPBEAR_KEY" ]; then
    log "$GREEN" "üîë Generating new SSH key..."
    progress_indicator 3 "Forging SSH key"
    dropbearkey -t ed25519 -f "$DROPBEAR_KEY" || { log "$RED" "Key generation failed"; exit 1; }
    chmod 600 "$DROPBEAR_KEY"
    dropbearkey -y -f "$DROPBEAR_KEY" | grep "^ssh-ed25519" > /etc/dropbear/authorized_keys || { log "$RED" "Failed to extract public key"; exit 1; }
    chmod 600 /etc/dropbear/authorized_keys
else
    log "$YELLOW" "‚ö†Ô∏è SSH key already exists. Reusing existing key."
    dropbearkey -y -f "$DROPBEAR_KEY" | grep "^ssh-ed25519" > /etc/dropbear/authorized_keys || { log "$RED" "Failed to extract public key"; exit 1; }
    chmod 600 /etc/dropbear/authorized_keys
fi
dropbearconvert dropbear openssh "$DROPBEAR_KEY" "$OPENSSH_KEY" || { log "$RED" "Key conversion failed"; exit 1; }
chmod 600 "$OPENSSH_KEY"

log "$BLUE" "Configuring Dropbear..."
DROPBEAR_CONF="/etc/dropbear/dropbear.conf"
touch "$DROPBEAR_CONF"
[[ ! -w "$DROPBEAR_CONF" ]] && { log "$RED" "ERROR: Cannot write to $DROPBEAR_CONF"; exit 1; }
sed -i '/^PasswordAuth/d' "$DROPBEAR_CONF" 2>/dev/null || true

log "$BLUE" "Saving overlay to persist SSH config..."
progress_indicator 2 "Saving overlay"
batocera-save-overlay || { log "$RED" "Overlay save failed"; exit 1; }

log "$BLUE" "Installing Tailscale..."
progress_indicator 5 "Downloading Tailscale"
mkdir -p "$INSTALL_DIR/bin"
wget -q -O "$INSTALL_DIR/tailscale.tgz" "https://pkgs.tailscale.com/stable/tailscale_${TAILSCALE_VERSION}_arm64.tgz" || { log "$RED" "Tailscale download failed."; exit 1; }
tar -xzf "$INSTALL_DIR/tailscale.tgz" -C "$INSTALL_DIR/bin" --strip-components=1 || { log "$RED" "Tailscale extraction failed."; exit 1; }
rm "$INSTALL_DIR/tailscale.tgz"
chmod +x "$INSTALL_DIR/bin/tailscale" "$INSTALL_DIR/bin/tailscaled"

log "$BLUE" "Starting Tailscale daemon..."
progress_indicator 3 "Starting Tailscale"
pkill -f "tailscaled" || true
mkdir -p /var/run/tailscale
ln -sf "$INSTALL_DIR/tailscaled.sock" /var/run/tailscale/tailscaled.sock
"$INSTALL_DIR/bin/tailscaled" --state="$INSTALL_DIR/tailscaled.state" --socket="$INSTALL_DIR/tailscaled.sock" --tun=userspace-networking --verbose=1 > /tmp/tailscaled.log 2>&1 &
sleep 10
"$INSTALL_DIR/bin/tailscale" --socket="$INSTALL_DIR/tailscaled.sock" up --authkey="$AUTH_KEY" --hostname="$HOSTNAME" --advertise-tags="$TAG" --accept-routes > /tmp/tailscaled.log 2>&1 || { log "$RED" "Tailscale up failed - check /tmp/tailscaled.log for details:"; cat /tmp/tailscaled.log; exit 1; }
sleep 5

log "$BLUE" "Waiting for Tailscale IP assignment..."
TRIES=0
TAILSCALE_IP=""
while [[ -z "$TAILSCALE_IP" && $TRIES -lt 10 ]]; do
    sleep 3
    TAILSCALE_IP=$("$INSTALL_DIR/bin/tailscale" --socket="$INSTALL_DIR/tailscaled.sock" ip -4 2>/dev/null)
    ((TRIES++))
done
[[ -z "$TAILSCALE_IP" ]] && { log "$YELLOW" "‚ö†Ô∏è Tailscale IP not assigned after 30s. Using Local IP."; TAILSCALE_IP="$LOCAL_IP"; } || log "$GREEN" "‚úÖ Tailscale IP: $TAILSCALE_IP"

banner "Almost There! Key Download and Testing"
echo -e "${CYAN}Time to test your SSH key‚Äîfollow these steps EXACTLY:${NC}"
pkill -f "dropbear.*2222" || true
/usr/sbin/dropbear -p 2222 -B >/dev/null 2>&1 &
log "$YELLOW" "1. Open a NEW PowerShell tab (Windows key + T, type 'powershell'):"
log "$YELLOW" "2. Copy and paste this EXACT command (right-click to paste):"
echo "scp -P 2222 root@$LOCAL_IP:/userdata/system/tailscale/keys/id_ed25519_batocera C:\\Users\\<YourUsername>\\.ssh\\id_ed25519_batocera"
log "$CYAN" "   - Replace <YourUsername> with your Windows username (e.g., 'Willi')."
log "$CYAN" "   - Password: 'linux' (type it when prompted)."
log "$CYAN" "   - Linux/macOS alternative:"
echo "     scp -P 2222 root@$LOCAL_IP:/userdata/system/tailscale/keys/id_ed25519_batocera ~/.ssh/id_ed25519_batocera"
log "$YELLOW" "3. Test your SSH in the SAME PowerShell tab:"
echo "ssh -i C:\\Users\\<YourUsername>\\.ssh\\id_ed25519_batocera root@$LOCAL_IP -p 2222"
log "$CYAN" "   - Replace <YourUsername> with your Windows username (e.g., 'Willi')."
log "$CYAN" "   - Linux/macOS alternative:"
echo "     ssh -i ~/.ssh/id_ed25519_batocera root@$LOCAL_IP -p 2222"
log "$CYAN" "   - NOTE: If using local IP and Tailscale is running on your PC, exit Tailscale first!"
log "$YELLOW" "4. If you connect (see 'root@BATOCERA'), type 'yes' below. If not, type 'no':"
read -rp "Did SSH key authentication work on port 2222? (yes/no): " KEY_WORKS

if [[ "$KEY_WORKS" =~ ^[Yy]es$ ]]; then
    log "$GREEN" "‚úÖ SSH key confirmed!"
    echo "PasswordAuth no" > /etc/dropbear/dropbear.conf
    NEW_PASSWORD=$(generate_random_password)
    echo "$NEW_PASSWORD" > /tmp/newpass
    passwd root < /tmp/newpass
    rm /tmp/newpass
    log "$RED" "IMPORTANT: Root password reset to random value‚Äîuse SSH key only: $NEW_PASSWORD"
    pkill -f "dropbear.*2222" || true
    log "$BLUE" "Starting Dropbear with key auth on port 22..."
    progress_indicator 2 "Locking SSH to port 22"
    pkill -f "dropbear" || true
    /usr/sbin/dropbear -s -p 22 || { log "$RED" "Dropbear start failed! Falling back..."; /usr/sbin/dropbear -p 22 || exit 1; }
else
    log "$RED" "‚ùå SSH key not confirmed. Password auth remains‚Äîtroubleshoot."
    pkill -f "dropbear.*2222" || true
    exit 1
fi

log "$BLUE" "Setting up persistence with fallback..."
progress_indicator 3 "Saving galaxy state"
cat > /userdata/system/custom.sh <<EOF
#!/bin/sh
mkdir -p /dev/net
[ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200 && chmod 600 /dev/net/tun
ip link set wlan0 up
iptables -F INPUT
iptables -P INPUT ACCEPT
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
pkill -f dropbear || true
sleep 1
/usr/sbin/dropbear -s -p 22
pkill -f smbd || true
[ -f /userdata/system/configs/smb.conf ] && smbd -D -s /userdata/system/configs/smb.conf
sleep 1
mkdir -p /var/run/tailscale
ln -sf $INSTALL_DIR/tailscaled.sock /var/run/tailscale/tailscaled.sock
if ! pgrep -f "$INSTALL_DIR/bin/tailscaled" > /dev/null; then
    $INSTALL_DIR/bin/tailscaled --state=$INSTALL_DIR/tailscaled.state --socket=$INSTALL_DIR/tailscaled.sock --tun=userspace-networking --verbose=1 > /tmp/tailscaled.log 2>&1 &
    sleep 10
    [ -f "$INSTALL_DIR/tailscaled.state" ] && $INSTALL_DIR/bin/tailscale --socket=$INSTALL_DIR/tailscaled.sock up --hostname="$HOSTNAME" --advertise-tags="$TAG" --accept-routes > /tmp/tailscaled.log 2>&1
fi
EOF
chmod +x /userdata/system/custom.sh
[ -f /userdata/system/custom.sh ] || { log "$RED" "ERROR: Failed to create /userdata/system/custom.sh"; exit 1; }

log "$BLUE" "Saving final overlay..."
batocera-save-overlay && log "$GREEN" "‚úÖ Final overlay saved." || { log "$RED" "Overlay save failed"; exit 1; }

banner "Installation Complete!"
log "$GREEN" "‚úÖ System configured! You can now connect via SSH using your key."
log "$YELLOW" "Final SSH connection commands (use these after reboot):"
echo "ssh -i C:\\Users\\<YourUsername>\\.ssh\\id_ed25519_batocera root@$LOCAL_IP"
echo "ssh -i C:\\Users\\<YourUsername>\\.ssh\\id_ed25519_batocera root@$TAILSCALE_IP"
log "$CYAN" "   - Replace <YourUsername> with your Windows username (e.g., 'Willi')."
log "$CYAN" "   - Linux/macOS: Use ~/.ssh/ instead of C:\\Users\\<YourUsername>\\.ssh\\"
log "$CYAN" "   - TIP: Simplify SSH by adding this to C:\\Users\\<YourUsername>\\.ssh\\config (create if needed):"
echo "Host batocera-tailscale"
echo "    HostName $TAILSCALE_IP"
echo "    User root"
echo "    IdentityFile C:\\Users\\<YourUsername>\\.ssh\\id_ed25519_batocera"
log "$CYAN" "   - Then just run: ssh batocera-tailscale"
log "$GREEN" "Rebooting in 5... 4... 3... 2... 1..."
sleep 5
sync
reboot -f
